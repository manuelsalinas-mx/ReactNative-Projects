[{"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/index.tsx":"1","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/App.tsx":"2","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/typescript/TiposBasicos.tsx":"3","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/typescript/ObjetosLiterales.tsx":"4","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/typescript/Funciones.tsx":"5","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/Contador.tsx":"6","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/ContadorConHook.tsx":"7","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/hooks/useCounter.tsx":"8","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/Login.tsx":"9","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/Usuarios.tsx":"10","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/api/RequestResponse.tsx":"11"},{"size":207,"mtime":1694019791883,"results":"12","hashOfConfig":"13"},{"size":751,"mtime":1693952461173,"results":"14","hashOfConfig":"13"},{"size":480,"mtime":1693861035998,"results":"15","hashOfConfig":"13"},{"size":800,"mtime":1693865439834,"results":"16","hashOfConfig":"13"},{"size":233,"mtime":1693866334974,"results":"17","hashOfConfig":"13"},{"size":756,"mtime":1693933036985,"results":"18","hashOfConfig":"13"},{"size":578,"mtime":1693938102418,"results":"19","hashOfConfig":"13"},{"size":314,"mtime":1693934498316,"results":"20","hashOfConfig":"13"},{"size":2612,"mtime":1693946258675,"results":"21","hashOfConfig":"13"},{"size":2101,"mtime":1694020192748,"results":"22","hashOfConfig":"13"},{"size":108,"mtime":1693953759388,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rj1ulr",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/index.tsx",[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/App.tsx",[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/typescript/TiposBasicos.tsx",[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/typescript/ObjetosLiterales.tsx",[],[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/typescript/Funciones.tsx",[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/Contador.tsx",[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/ContadorConHook.tsx",[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/hooks/useCounter.tsx",[],[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/Login.tsx",["61"],[],"import { type } from \"@testing-library/user-event/dist/type\";\nimport { Fragment, useEffect, useReducer } from \"react\";\n\ninterface AuthState {\n    validando: boolean;\n    token: string | null;\n    username: string;\n    nombre: string;\n}\n\nconst initialState: AuthState = {\n    validando: true,\n    token: null,\n    username: '',\n    nombre: ''\n    \n}\n\ntype LoginPayload = {\n    username: string;\n    nombre: string;\n}\n\ntype AuthAction = \n        | { type: 'logout' }\n        | { type: 'login', payload: LoginPayload };\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n    switch (action.type) {\n        case 'logout':\n            return {\n                validando: false,\n                token: null,\n                username: '',\n                nombre: ''\n            }\n\n        case 'login':\n            return {\n                validando: false,\n                token: 'M0G9G8V9B0B0B0UG9',\n                username: action.payload.username,\n                nombre: action.payload.nombre\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const Login = () => {\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    useEffect(() => {\n        setTimeout(() => {\n            dispatch({ type: 'logout' });\n        }, 1500);\n    }, [])\n\n    // functions\n    const login = () => {\n        dispatch({ \n            type: 'login',\n            payload: {\n                nombre: 'Manuel Salinas',\n                username: \"mxnuelsg\"\n            }\n        })\n    }\n\n    const logout = () => {\n        dispatch({ type: 'logout' });\n    }\n\n    if (state.validando) {\n        return(\n            <Fragment>\n                <h3>Login</h3>\n                <div className=\"alert alert-info\">\n                    Validando...\n                </div>\n            </Fragment>\n        )\n    }\n    \n    return (\n      <>\n          <h3>Login</h3>\n\n          {\n            (state.token)\n            ?  <div className=\"alert alert-success\">Autenticado como <b>{state.nombre}</b></div>\n            :  <div className=\"alert alert-danger\">No autenticado</div>\n          }     \n\n          {\n            (state.token)\n            ? (\n                <button \n                className=\"btn btn-danger\"\n                onClick={ logout }\n                >\n                    Logout\n                </button>\n            )\n            : (\n               <button\n                className=\"btn btn-primary\"\n                onClick={ login }\n                >\n                    Login\n                </button>\n            ) \n          }          \n      </>\n    )\n  }\n  ",[],"/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/components/Usuarios.tsx",["62"],[],"import { useEffect, useRef, useState } from \"react\"\nimport { reqResApi } from \"../api/RequestResponse\"\nimport { User, UserListResponse } from \"../interfaces/ReqRes\";\nimport { config } from \"process\";\n\nexport const Usuarios = () => {\n\n    const [users, setUsers] = useState<User[]>([]);\n    const paginaRef = useRef(1);\n\n    useEffect(() => {\n        // API call\n        loadUsers();   \n    }, [])  \n    \n    // Function to load users from endpoint\n    const loadUsers = async() => {\n        const response = await reqResApi.get<UserListResponse>('/users', {\n            params: {\n                page: paginaRef.current\n            }\n        })\n\n        if (response.data.data.length > 0) {\n            setUsers(response.data.data);\n            console.log( response.data.data );\n            paginaRef.current ++;\n\n        } else {\n            alert('No hay mas registros');\n        }\n    }\n    \n\n    // Function to Render users \n    const renderUser = ({ id, avatar, first_name, last_name, email }: User) => {\n        return(\n            <tr key={ id.toString() }>\n                <td>\n                    <img\n                     src= { avatar }\n                     alt= { first_name } \n                     style={{\n                        width: 60,\n                        borderRadius: 30\n                     }}\n                      />\n                </td>\n                <td><b>{ first_name }</b> { last_name}</td>\n                <td>{ email }</td>\n            </tr>\n        )\n    }\n\n  return (\n    <>\n        <h3>Usuarios Remotos:</h3>\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>Avatar</th>\n                    <th>Nombre</th>\n                    <th>Email</th>\n                </tr>\n            </thead>\n            <tbody>\n              {\n                users.map( renderUser )\n              }  \n            </tbody>           \n        </table>\n       \n        <button \n            className=\"btn btn-primary\"\n            onClick={ loadUsers }\n            >\n                Cargar mas usuarios\n         </button>\n    </>\n  )\n}\n","/Users/manuelsalinas/Desktop/React-Native/01-reforzamiento/src/api/RequestResponse.tsx",[],[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":16},"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","'config' is defined but never used."]